{
  "openapi": "3.0.3",
  "info": {
    "version": "0.0.5",
    "title": "Kapusta Swagger",
    "description": "Swagger for Kapusta app",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "servers": [
    {
      "url": "http://localhost:5000/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Transactions",
      "description": "Transactions endpoint"
    },
    {
      "name": "Balance",
      "description": "Balance endpoint"
    }
  ],
  "paths": {
    "/transactions": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Transaction creation",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Transaction object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "409": {
            "description": "Operation exceed limit",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [
          "Transactions"
        ],
        "summary": "Transaction deletion",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Transaction object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionDeleteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transaction deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionDeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error while deleting transaction",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/balance": {
      "post": {
        "tags": [
          "Balance"
        ],
        "summary": "Balance creation",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Balance object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },
      "get": {
        "tags": [
          "Balance"
        ],
        "summary": "Get balance",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Balance object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetBalanceRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBalanceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TransactionCreateRequest": {
        "type": "object",
        "required": [
          "date",
          "description",
          "transactionType",
          "categoryId",
          "amount"
        ],
        "properties": {
          "date": {
            "type": "object",
            "description": "Transaction's date",
            "properties": {
              "day": {
                "type": "number",
                "example": "5"
              },
              "month": {
                "type": "number",
                "example": "8"
              },
              "year": {
                "type": "number",
                "example": "2022"
              }
            }
          },
          "description": {
            "type": "object",
            "description": "Transaction's description",
            "properties": {
              "descriptionName": {
                "type": "string",
                "example": "Ice Cream"
              }
            }
          },
          "transactionType": {
            "type": "string",
            "description": "Transaction's type",
            "example": "expenses",
            "enum": "expenses income"
          },
          "categoryId": {
            "type": "string",
            "description": "Category's ID"
          },
          "amount": {
            "type": "integer",
            "description": "Transaction's amount",
            "example": 100
          }
        }
      },
      "TransactionCreateResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response's message"
          },
          "code": {
            "type": "integer",
            "description": "Response's code"
          },
          "date": {
            "type": "object",
            "description": "Transaction's date",
            "properties": {
              "day": {
                "type": "number",
                "example": "5"
              },
              "month": {
                "type": "number",
                "example": "8"
              },
              "year": {
                "type": "number",
                "example": "2022"
              }
            }
          },
          "description": {
            "type": "object",
            "description": "Transaction's description",
            "properties": {
              "descriptionName": {
                "type": "string",
                "example": "Ice Cream"
              }
            }
          },
          "transactionType": {
            "type": "string",
            "description": "Transaction's type",
            "example": "expenses"
          },
          "categoryId": {
            "type": "string",
            "description": "Category's ID"
          },
          "amount": {
            "type": "integer",
            "description": "Transaction's amount",
            "example": 100
          },
          "userId": {
            "type": "string",
            "description": "User's ID"
          }
        },
        "example": {
          "message": "Success",
          "code": 201,
          "data": {
            "transaction": {
              "date": {
                "day": "31",
                "month": "08",
                "year": "2022"
              },
              "description": {
                "descriptionName": "ковбаса"
              },
              "transactionType": "income",
              "categoryId": "1",
              "amount": "0"
            }
          }
        }
      },
      "TransactionDeleteRequest": {
        "type": "object",
        "required": [
          "transactionId"
        ],
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "Transaction's ID",
            "example": "6316f81290df3bc8e0bb807d"
          }
        }
      },
      "TransactionDeleteResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response's message"
          },
          "code": {
            "type": "integer",
            "description": "Response's code"
          },
          "data": {
            "type": "object",
            "description": "Transaction's data",
            "properties": {
              "id": {
                "type": "number",
                "example": "6316f81290df3bc8e0bb807d"
              }
            }
          }
        },
        "example": {
          "message": "Transaction deleted",
          "code": 200,
          "data": {
            "id": "631718cd0aad7aecbad090dd"
          }
        }
      },
      "BalanceCreateRequest": {
        "type": "object",
        "required": [
          "currentBalance"
        ],
        "properties": {
          "currentBalance": {
            "type": "integer",
            "description": "Balance's value",
            "example": 1000
          }
        }
      },
      "BalanceCreateResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response's message"
          },
          "code": {
            "type": "integer",
            "description": "Response's code"
          },
          "data": {
            "type": "object",
            "description": "Transaction's data",
            "properties": {
              "data": {
                "type": "number",
                "description": "Recorded balance",
                "example": "1000"
              }
            }
          }
        },
        "example": {
          "message": "Success",
          "code": 200,
          "data": {
            "balance": "1000"
          }
        }
      },
      "GetBalanceRequest": {
        "type": "object",
        "required": [
          "_id"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's ID",
            "example": "6317422018d90abea5e080aa"
          }
        }
      },
      "GetBalanceResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response's message"
          },
          "code": {
            "type": "integer",
            "description": "Response's code"
          },
          "data": {
            "type": "object",
            "description": "Transaction's data",
            "properties": {
              "data": {
                "type": "number",
                "description": "Current balance value",
                "example": 1000
              }
            }
          }
        },
        "example": {
          "message": "Success",
          "code": 201,
          "data": {
            "balance": "1000"
          }
        }
      }
    }
  },
  "securitySchemes": {
    "Bearer": {
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT"
    }
  }
}